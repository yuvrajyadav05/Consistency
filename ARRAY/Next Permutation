class Solution {
    public void nextPermutation(int[] nums) {
        int n = nums.length;

        int ind = -1;
        for(int i = n-2 ; i >= 0 ; i--)
        {
            if(nums[i] < nums[i+1])
            {
                ind = i;
                break;
            }
        }

        if(ind == -1)
        {
            reverse(nums, 0, n-1);
        }
        else
        {
            int ind2 = 0;
            for(int i = n-1 ; i >= 0 ; i--)
            {
                if(nums[i] > nums[ind])
                {
                    ind2 = i;
                    break;
                }
            }

            int temp = nums[ind];
            nums[ind] = nums[ind2];
            nums[ind2] = temp;

            reverse(nums, ind+1, n-1);
        }

    }
    public void reverse(int nums[], int i, int j)
    {
        while (i < j) {
            // Swap the elements at left and right indices
            int temp = nums[i];
            nums[i] = nums[j];
            nums[j] = temp;

            // Move towards the middle
            i++;
            j--;
        }
    }
}
